{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/pages/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/pages/CSS.module.css"],"names":["module","exports","Header","className","s","header","navlink","to","block","Error404","h1","Junior","mainBlock","Message","props","styles","message","avatar","style","backgroundImage","src","info","name","text","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","errorInput","input","value","onChange","onKeyDown","onBlur","button","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","event","trimmedName","currentTarget","trim","key","HW3","setUsers","user","v1","push","console","log","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","e","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","setText","showAlert","setChecked","column","blue","PreJunior","PATH","Routes","path","exact","render","HW5","App","title","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,wB,mBCAvJD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,WAAa,+B,mBCA/DD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCAhKD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,OAAS,4BAA4B,IAAM,2B,mBCApGD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,qCAAqC,MAAQ,+B,mBCA1HD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,qB,mBCAjDD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,yJCczEC,MAXf,WACI,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,cAAC,IAAD,CAASF,UAAWC,IAAEE,QAASC,GAAG,cAAlC,uBACA,cAAC,IAAD,CAASJ,UAAWC,IAAEE,QAASC,GAAG,UAAlC,oBACA,qBAAKJ,UAAWC,IAAEI,Y,OCKfC,MAXf,WACI,OACI,sBAAKN,UAAWC,IAAEM,GAAlB,UACI,qCAEA,qDACA,sFCGGC,MAVf,WACI,OACI,qBAAKR,UAAWC,IAAEQ,UAAlB,SACI,oBAAIT,UAAWC,IAAEM,GAAjB,uB,iBCoBGG,MAff,SAAiBC,GACb,OACI,sBAAKX,UAAWY,IAAOC,QAAvB,UACI,qBAAKb,UAAWY,IAAOE,OAAQC,MAAO,CAACC,gBAAgB,OAAD,OAAQL,EAAMG,OAAd,MAAtD,SACI,qBAAKG,IAAKN,EAAMG,WAEpB,sBAAKd,UAAWY,IAAOM,KAAvB,UACCP,EAAMQ,KACP,qBAAKnB,UAAWY,IAAOQ,KAAvB,SAA8BT,EAAME,UACpC,qBAAKb,UAAWY,IAAOS,KAAvB,SAA8BV,EAAMU,cChB1CC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QA0BKC,MAvBf,WACI,OACI,gCACI,uBADJ,kHAMI,cAAC,EAAD,CACIT,OAAQQ,EACRH,KAAMG,EACNT,QAASS,EACTD,KAAMC,IAGV,uBAGA,2B,OCNGE,MAbf,SAAgBb,GAKZ,OACI,gCACKA,EAAMc,OAAON,KADlB,KAC0BR,EAAMc,OAAOC,SACnC,wBAASC,QAPM,WACnBhB,EAAMiB,qBAAqBjB,EAAMc,OAAOI,MAMpC,mBCmBGC,MAzBf,SAAiBnB,GACb,IAAMoB,EAAgBpB,EAAMqB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIT,OAAQS,EACRN,qBAAsBjB,EAAMiB,sBAFvBM,EAAEL,QAWf,OACI,gCACKE,EACD,wBAAQJ,QARD,WAAOhB,EAAMwB,UAAU,QAQ9B,iBACA,wBAAQR,QARA,WAAOhB,EAAMwB,UAAU,SAQ/B,kBACA,wBAAQR,QARE,WAAOhB,EAAMwB,UAAU,WAQjC,oBACA,wBAAQR,QARD,WAAOhB,EAAMwB,UAAU,QAQ9B,qBClBNC,EAAoC,CACtC,CAACP,IAAK,EAAGV,KAAM,QAASO,SAAU,QAClC,CAACG,IAAK,EAAGV,KAAM,QAASO,SAAU,OAClC,CAACG,IAAK,EAAGV,KAAM,QAASO,SAAU,OAClC,CAACG,IAAK,EAAGV,KAAM,OAAQO,SAAU,QACjC,CAACG,IAAK,EAAGV,KAAM,aAAcO,SAAU,WAsD5BW,MA3Bf,WACI,MAA8BC,mBAA4BF,GAA1D,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAqB,OAAjD,mBAAOG,EAAP,KAAeN,EAAf,KAEMO,EA3BmB,SAACH,EAA4BE,GActD,MAAe,QAAXA,EAAyBF,EACjBA,EAAQE,QAAO,SAAAP,GAAC,OAAIA,EAAER,WAAae,KAYvBE,CAAcJ,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIT,KAAMU,EACNP,UAAWA,EACXP,qBAXiB,SAACC,GAAD,OAAiBW,EAVtB,SAACD,EAA4BV,GAErD,OADmCU,EAAQE,QAAO,SAAAP,GAAC,OAAEA,EAAEL,KAAOA,KASLe,CAAaL,EAASV,OAcvE,uBAGA,2B,yBCtCGgB,EAhB+B,SAAC,GAEzC,IADD1B,EACA,EADAA,KAAM2B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAAYC,EACnD,EADmDA,QAE9CC,EAAaH,EAAQ/C,IAAEmD,WAAanD,IAAEoD,MAE5C,OACI,gCACI,uBAAOC,MAAOnC,EAAMoC,SAAUT,EAC9BU,UAAWN,EAASO,OAAQX,EAAiB9C,UAAWmD,IACxD,+BAAOH,IACP,wBAAQrB,QAASoB,EAAS/C,UAAWC,IAAEyD,OAAQC,UAAWxC,EAA1D,iBACA,qBAAKnB,UAAWC,IAAE2D,MAAlB,SAA0BX,QC8BvBY,EAxCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBACrE,EAAwBzB,mBAAiB,IAAzC,mBAAOnB,EAAP,KAAa6C,EAAb,KACA,EAA0B1B,mBAAiB,IAA3C,mBAAOU,EAAP,KAAciB,EAAd,KAcMlB,EAAU,WACZmB,MAAM,SAAD,OAAU/C,EAAV,OACL4C,EAAgB5C,IAQd8B,EAAaa,EAAMK,OAEzB,OACI,cAAC,EAAD,CACIhD,KAAMA,EACN2B,gBA3BgB,SAACsB,GACrB,IAAMC,EAAcD,EAAME,cAAchB,MAAMiB,OAC3CF,GACCL,EAAQK,GACRrB,GAASiB,EAAS,MAElB9C,GAAQ6C,EAAQ,IAChBC,EAAS,sBAqBTlB,QAASA,EACTC,MAAOA,EACPC,WAAYA,EACZC,QAdQ,SAACkB,GACI,UAAdA,EAAMI,KAAmBrD,GACxB4B,QCAG0B,MA1Bf,WACI,MAA0BnC,mBAA0B,IAApD,mBAAOwB,EAAP,KAAcY,EAAd,KASA,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBZ,MAAOA,EAAOC,gBAbjB,SAAC5C,GACrB,IAAIwD,EAAO,CAACxD,KAAKA,EAAKU,IAAI+C,eAC1Bd,EAAMe,KAAKF,GACXD,EAASZ,GACTgB,QAAQC,IAAIjB,MAWR,uBAGA,2B,iIC0BGkB,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPE1B,EAOH,EAPGA,SAAU2B,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYjC,EAMf,EANeA,QACZF,EAKH,EALGA,MACAhD,EAIH,EAJGA,UAAWoF,EAId,EAJcA,cAERC,EAEN,iBAeKC,EAAkB,UAAMrF,IAAE+C,MAAR,YAAiBoC,GAAgC,IACnEG,EAAmB,UAAMtF,IAAEoD,MAAR,YAAiBL,EAAQ/C,IAAEmD,WAAanD,IAAEuF,WAA1C,YAAwDxF,GAEjF,OACI,qCACI,mCACIiF,KAAM,OACN1B,SArBa,SAACkC,GACtBlC,GACGA,EAASkC,GAEZP,GAAgBA,EAAaO,EAAEnB,cAAchB,QAkBrC6B,WAhBe,SAACM,GACxBN,GAAcA,EAAWM,GAEzBvC,GACa,UAAVuC,EAAEjB,KACFtB,KAYKlD,UAAWuF,GAEPF,IAEPrC,GAAS,sBAAMhD,UAAWsF,EAAjB,SAAsCtC,Q,wDC3B7C0C,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK3F,EAGR,EAHQA,UACFqF,EAEN,iBACKO,EAAc,UAAM3F,IAAEyD,OAAR,YAAkBiC,EAAM1F,IAAE0F,IAAM1F,IAAE4F,QAAlC,YAA6C7F,GAEjE,OACI,oCACIA,UAAW4F,GACPP,K,gGCsBDS,EAhCyC,SAAC,GASpD,EAPGb,KAOF,IANE1B,EAMH,EANGA,SAAUwC,EAMb,EANaA,gBACV/F,EAKH,EALGA,UACAgG,GAIH,EALcZ,cAKd,EAJGY,UAEGX,EAEN,iBAOKE,EAAmB,UAAMtF,IAAEgG,SAAR,YAAoBjG,GAAwB,IAErE,OACI,wBAAOA,UAAWC,IAAEiG,MAApB,UACI,mCACIjB,KAAM,WACN1B,SAZa,SAACkC,GACtBlC,GAAYA,EAASkC,GACrBM,GAAmBA,EAAgBN,EAAEnB,cAAc6B,UAW3CnG,UAAWuF,GAEPF,IAEPW,GAAY,sBAAMhG,UAAWC,IAAEmF,cAAnB,SAAmCY,QCyC7CI,MAzEf,WACI,MAAwB9D,mBAAiB,IAAzC,mBAAOlB,EAAP,KAAaiF,EAAb,KACMrD,EAAQ5B,EAAO,GAAK,QAEpBkF,EAAY,WACVtD,EACAkB,MAAM,gFAENA,MAAM9C,IAId,EAA8BkB,oBAAkB,GAAhD,mBAAO6D,EAAP,KAAgBI,EAAhB,KAGA,OACI,gCACI,uBADJ,cAII,sBAAKvG,UAAWC,IAAEuG,OAAlB,UACI,cAAC,EAAD,CACIlD,MAAOlC,EACP8D,aAAcmB,EACdnD,QAASoD,EACTtD,MAAOA,IAIX,cAAC,EAAD,CACIhD,UAAWC,IAAEwG,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACId,KAAG,EACHhE,QAAS2E,EAFb,qBAOA,cAAC,EAAD,CAAa3C,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIwC,QAASA,EACTJ,gBAAiBQ,EAFrB,wBAQA,cAAC,EAAD,CAAeJ,QAASA,EAAS5C,SA/CxB,SAACkC,GAAD,OAAsCc,EAAWd,EAAEnB,cAAc6B,eAkD9E,uBAKA,2BCrDGO,MAdf,WACI,OACI,sBAAK1G,UAAWC,IAAEQ,UAAlB,UACI,oBAAIT,UAAWC,IAAEM,GAAjB,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPCoG,GACG,cADHA,GAED,UAqBGC,OAjBf,WACI,OACI,8BAEI,eAAC,IAAD,WAGA,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAU3G,GAAIuG,QACpD,cAAC,IAAD,CAAOE,KAAMF,GAAiBI,OAAQ,kBAAM,cAAC,EAAD,OAC5C,cAAC,IAAD,CAAOF,KAAMF,GAAaI,OAAQ,kBAAM,cAAC,EAAD,OAExC,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,aCLlBC,OAdf,WACI,OACI,8BAEI,eAAC,IAAD,WAEA,cAAC,EAAD,IACA,cAAC,GAAD,UCIGC,OAXf,WACI,OACI,sBAAKjH,UAAWC,IAAEgH,IAAlB,UACI,qBAAKjH,UAAWC,IAAEiH,MAAlB,8BAEA,cAAC,GAAD,QCEQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAAST,OACL,cAAC,IAAMU,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAlF,GACH8B,QAAQ9B,MAAMA,EAAMnC,a,kBEhJpChB,EAAOC,QAAU,CAAC,QAAU,qBAAqB,UAAY,uBAAuB,GAAK,gBAAgB,MAAQ,mBAAmB,OAAS,uB","file":"static/js/main.c73a958a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__55Sg5\",\"avatar\":\"Message_avatar__3hMSQ\",\"text\":\"Message_text__2k5yP\",\"info\":\"Message_info__2teGk\",\"time\":\"Message_time__3CnxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__sMqSy\",\"errorInput\":\"Greeting_errorInput__3wnQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3nLt9\",\"superInput\":\"SuperInputText_superInput__3tPp7\",\"errorInput\":\"SuperInputText_errorInput__3VyRt\",\"error\":\"SuperInputText_error__2y_SA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__18z7l\",\"button\":\"SuperButton_button__MGrIA\",\"red\":\"SuperButton_red__1EaMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__32Sb4\",\"spanClassName\":\"SuperCheckbox_spanClassName__3wSyt\",\"label\":\"SuperCheckbox_label__1Fx0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__172_W\",\"title\":\"App_title__2_x3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__GdhvB\",\"column\":\"HW4_column__9P6Ut\",\"testSpanError\":\"HW4_testSpanError__3gGaj\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './CSS.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink className={s.navlink} to=\"/pre-junior\">PreJunior</NavLink>\r\n            <NavLink className={s.navlink} to=\"/junior\">Junior</NavLink>\r\n            <div className={s.block}></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport s from './CSS.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.h1}>\r\n            <h1 >404</h1>\r\n            \r\n            <div>Page is not found!</div>\r\n            <h2>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import s from './CSS.module.css'\n\nfunction Junior() {\n    return (\n        <div className={s.mainBlock}>\n            <h1 className={s.h1}>JUNIOR</h1>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default Junior","import React from 'react'\r\nimport  styles from './Message.module.css'\r\n\r\ntype messageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: messageType) {\r\n    return (\r\n        <div className={styles.message}>\r\n            <div className={styles.avatar} style={{backgroundImage:`url(${props.avatar})`}}>\r\n                <img src={props.avatar}/>\r\n            </div>\r\n            <div className={styles.info}>\r\n            {props.name} \r\n            <div className={styles.text}>{props.message}</div>\r\n            <div className={styles.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/* для личного творчества, могу проверить\r\n            <AlternativeMessage/> */}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairType } from './HW2'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType \r\n    deleteAffairCallback: (_id:number) => void \r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)  \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name}, {props.affair.priority}\r\n            <button  onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, { Dispatch, SetStateAction } from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { \r\n    data: Array<AffairType>\r\n    //setFilter: (filter:string) => void\r\n    setFilter:Dispatch<SetStateAction<FilterType>>\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')}\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = string \r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} \r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ \r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: string): Array<AffairType> => {\r\n    /*let filteredAffairs: Array<AffairType> = []\r\n    if(filter === 'all'){\r\n        filteredAffairs = affairs\r\n    }else \r\n    if (filter === 'high') {\r\n        filteredAffairs = affairs.filter(a => a.priority === 'high')\r\n    } else if (filter === 'middle') {\r\n        filteredAffairs = affairs.filter(a => a.priority === 'middle')\r\n    } else if (filter === 'low') {\r\n        filteredAffairs = affairs.filter(a => a.priority === 'low')\r\n       \r\n    } return filteredAffairs */\r\n    \r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter)\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { \r\n    let newAffairs:Array<AffairType> = affairs.filter(a=>a._id != _id) \r\n    return newAffairs\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEventHandler,KeyboardEvent,ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (event:ChangeEvent<HTMLInputElement>) => void\r\n    onEnter: (event:KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string // need to fix any\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.errorInput : s.input// need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} \r\n            onKeyDown={onEnter} onBlur={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\r\n            <div className={s.count}>{totalUsers}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState,ChangeEvent,KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport { UserType } from './HW3'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> \r\n    addUserCallback: (name:string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => { \r\n        const trimmedName = event.currentTarget.value.trim()\r\n        if(trimmedName) {\r\n            setName(trimmedName)\r\n            error && setError('')\r\n        } else {\r\n            name && setName('')\r\n            setError('name is required')\r\n        }\r\n         \r\n    }\r\n    \r\n    const addUser = () => {\r\n        alert(`Hello ${name} !`)\r\n        addUserCallback(name) // need to fix   \r\n    }\r\n\r\n    const onEnter = (event:KeyboardEvent<HTMLInputElement>) => {\r\n        if(event.key === 'Enter' && name){\r\n            addUser()\r\n        }\r\n    }\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onEnter={onEnter}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport {v1} from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n\r\n    const addUserCallback = (name: string) => { \r\n        let user = {name:name,_id:v1()}\r\n        users.push(user)/// ne nado\r\n        setUsers(users) //////////////// setUsers([...users, user]) \r\n        console.log(users);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport s from './CSS.module.css'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div className={s.mainBlock}>\r\n            <h1 className={s.h1}>PreJUNIOR</h1>\r\n            <HW1 />\r\n            <HW2 />\r\n            <HW3 />\r\n            <HW4 />\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react';\r\nimport { Switch, Route, Redirect, HashRouter } from 'react-router-dom';\r\nimport Error404 from './pages/Error404';\r\nimport Junior from './pages/Junior';\r\nimport PreJunior from './pages/PreJunior';\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    \r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>           \r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './pages/Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div className={s.title}>React homeworks:</div>\r\n   \r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlink\":\"CSS_navlink__O_1Hc\",\"mainBlock\":\"CSS_mainBlock__3JNgH\",\"h1\":\"CSS_h1__A2_BR\",\"block\":\"CSS_block__2lpu4\",\"header\":\"CSS_header__1mmPE\"};"],"sourceRoot":""}